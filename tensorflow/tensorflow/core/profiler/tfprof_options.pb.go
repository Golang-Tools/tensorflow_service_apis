// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0-devel
// 	protoc        v3.11.4
// source: tensorflow/core/profiler/tfprof_options.proto

package profiler

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Refers to tfprof_options.h/cc for documentation.
// Only used to pass tfprof options from Python to C++.
type OptionsProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxDepth               int64    `protobuf:"varint,1,opt,name=max_depth,json=maxDepth,proto3" json:"max_depth,omitempty"`
	MinBytes               int64    `protobuf:"varint,2,opt,name=min_bytes,json=minBytes,proto3" json:"min_bytes,omitempty"`
	MinPeakBytes           int64    `protobuf:"varint,19,opt,name=min_peak_bytes,json=minPeakBytes,proto3" json:"min_peak_bytes,omitempty"`
	MinResidualBytes       int64    `protobuf:"varint,20,opt,name=min_residual_bytes,json=minResidualBytes,proto3" json:"min_residual_bytes,omitempty"`
	MinOutputBytes         int64    `protobuf:"varint,21,opt,name=min_output_bytes,json=minOutputBytes,proto3" json:"min_output_bytes,omitempty"`
	MinMicros              int64    `protobuf:"varint,3,opt,name=min_micros,json=minMicros,proto3" json:"min_micros,omitempty"`
	MinAcceleratorMicros   int64    `protobuf:"varint,22,opt,name=min_accelerator_micros,json=minAcceleratorMicros,proto3" json:"min_accelerator_micros,omitempty"`
	MinCpuMicros           int64    `protobuf:"varint,23,opt,name=min_cpu_micros,json=minCpuMicros,proto3" json:"min_cpu_micros,omitempty"`
	MinParams              int64    `protobuf:"varint,4,opt,name=min_params,json=minParams,proto3" json:"min_params,omitempty"`
	MinFloatOps            int64    `protobuf:"varint,5,opt,name=min_float_ops,json=minFloatOps,proto3" json:"min_float_ops,omitempty"`
	MinOccurrence          int64    `protobuf:"varint,17,opt,name=min_occurrence,json=minOccurrence,proto3" json:"min_occurrence,omitempty"`
	Step                   int64    `protobuf:"varint,18,opt,name=step,proto3" json:"step,omitempty"`
	OrderBy                string   `protobuf:"bytes,7,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	AccountTypeRegexes     []string `protobuf:"bytes,8,rep,name=account_type_regexes,json=accountTypeRegexes,proto3" json:"account_type_regexes,omitempty"`
	StartNameRegexes       []string `protobuf:"bytes,9,rep,name=start_name_regexes,json=startNameRegexes,proto3" json:"start_name_regexes,omitempty"`
	TrimNameRegexes        []string `protobuf:"bytes,10,rep,name=trim_name_regexes,json=trimNameRegexes,proto3" json:"trim_name_regexes,omitempty"`
	ShowNameRegexes        []string `protobuf:"bytes,11,rep,name=show_name_regexes,json=showNameRegexes,proto3" json:"show_name_regexes,omitempty"`
	HideNameRegexes        []string `protobuf:"bytes,12,rep,name=hide_name_regexes,json=hideNameRegexes,proto3" json:"hide_name_regexes,omitempty"`
	AccountDisplayedOpOnly bool     `protobuf:"varint,13,opt,name=account_displayed_op_only,json=accountDisplayedOpOnly,proto3" json:"account_displayed_op_only,omitempty"`
	Select                 []string `protobuf:"bytes,14,rep,name=select,proto3" json:"select,omitempty"`
	Output                 string   `protobuf:"bytes,15,opt,name=output,proto3" json:"output,omitempty"`
	DumpToFile             string   `protobuf:"bytes,16,opt,name=dump_to_file,json=dumpToFile,proto3" json:"dump_to_file,omitempty"`
}

func (x *OptionsProto) Reset() {
	*x = OptionsProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_profiler_tfprof_options_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionsProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionsProto) ProtoMessage() {}

func (x *OptionsProto) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_profiler_tfprof_options_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionsProto.ProtoReflect.Descriptor instead.
func (*OptionsProto) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_profiler_tfprof_options_proto_rawDescGZIP(), []int{0}
}

func (x *OptionsProto) GetMaxDepth() int64 {
	if x != nil {
		return x.MaxDepth
	}
	return 0
}

func (x *OptionsProto) GetMinBytes() int64 {
	if x != nil {
		return x.MinBytes
	}
	return 0
}

func (x *OptionsProto) GetMinPeakBytes() int64 {
	if x != nil {
		return x.MinPeakBytes
	}
	return 0
}

func (x *OptionsProto) GetMinResidualBytes() int64 {
	if x != nil {
		return x.MinResidualBytes
	}
	return 0
}

func (x *OptionsProto) GetMinOutputBytes() int64 {
	if x != nil {
		return x.MinOutputBytes
	}
	return 0
}

func (x *OptionsProto) GetMinMicros() int64 {
	if x != nil {
		return x.MinMicros
	}
	return 0
}

func (x *OptionsProto) GetMinAcceleratorMicros() int64 {
	if x != nil {
		return x.MinAcceleratorMicros
	}
	return 0
}

func (x *OptionsProto) GetMinCpuMicros() int64 {
	if x != nil {
		return x.MinCpuMicros
	}
	return 0
}

func (x *OptionsProto) GetMinParams() int64 {
	if x != nil {
		return x.MinParams
	}
	return 0
}

func (x *OptionsProto) GetMinFloatOps() int64 {
	if x != nil {
		return x.MinFloatOps
	}
	return 0
}

func (x *OptionsProto) GetMinOccurrence() int64 {
	if x != nil {
		return x.MinOccurrence
	}
	return 0
}

func (x *OptionsProto) GetStep() int64 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *OptionsProto) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *OptionsProto) GetAccountTypeRegexes() []string {
	if x != nil {
		return x.AccountTypeRegexes
	}
	return nil
}

func (x *OptionsProto) GetStartNameRegexes() []string {
	if x != nil {
		return x.StartNameRegexes
	}
	return nil
}

func (x *OptionsProto) GetTrimNameRegexes() []string {
	if x != nil {
		return x.TrimNameRegexes
	}
	return nil
}

func (x *OptionsProto) GetShowNameRegexes() []string {
	if x != nil {
		return x.ShowNameRegexes
	}
	return nil
}

func (x *OptionsProto) GetHideNameRegexes() []string {
	if x != nil {
		return x.HideNameRegexes
	}
	return nil
}

func (x *OptionsProto) GetAccountDisplayedOpOnly() bool {
	if x != nil {
		return x.AccountDisplayedOpOnly
	}
	return false
}

func (x *OptionsProto) GetSelect() []string {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *OptionsProto) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *OptionsProto) GetDumpToFile() string {
	if x != nil {
		return x.DumpToFile
	}
	return ""
}

type AdvisorOptionsProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// checker name -> a dict of key-value options.
	Checkers map[string]*AdvisorOptionsProto_CheckerOption `protobuf:"bytes,1,rep,name=checkers,proto3" json:"checkers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AdvisorOptionsProto) Reset() {
	*x = AdvisorOptionsProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_profiler_tfprof_options_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvisorOptionsProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvisorOptionsProto) ProtoMessage() {}

func (x *AdvisorOptionsProto) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_profiler_tfprof_options_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvisorOptionsProto.ProtoReflect.Descriptor instead.
func (*AdvisorOptionsProto) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_profiler_tfprof_options_proto_rawDescGZIP(), []int{1}
}

func (x *AdvisorOptionsProto) GetCheckers() map[string]*AdvisorOptionsProto_CheckerOption {
	if x != nil {
		return x.Checkers
	}
	return nil
}

type AdvisorOptionsProto_CheckerOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options map[string]string `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AdvisorOptionsProto_CheckerOption) Reset() {
	*x = AdvisorOptionsProto_CheckerOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_profiler_tfprof_options_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvisorOptionsProto_CheckerOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvisorOptionsProto_CheckerOption) ProtoMessage() {}

func (x *AdvisorOptionsProto_CheckerOption) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_profiler_tfprof_options_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvisorOptionsProto_CheckerOption.ProtoReflect.Descriptor instead.
func (*AdvisorOptionsProto_CheckerOption) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_profiler_tfprof_options_proto_rawDescGZIP(), []int{1, 1}
}

func (x *AdvisorOptionsProto_CheckerOption) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

var File_tensorflow_core_profiler_tfprof_options_proto protoreflect.FileDescriptor

var file_tensorflow_core_profiler_tfprof_options_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x74, 0x66, 0x70, 0x72, 0x6f,
	0x66, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x74, 0x66, 0x70, 0x72,
	0x6f, 0x66, 0x22, 0xcb, 0x06, 0x0a, 0x0c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x70, 0x74, 0x68,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a,
	0x0e, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x65, 0x61, 0x6b, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x61, 0x6b, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64,
	0x75, 0x61, 0x6c, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x69, 0x64, 0x75, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x69, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6d, 0x69, 0x6e,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x69, 0x6e, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x6d, 0x69, 0x6e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x6d, 0x69,
	0x6e, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x6d, 0x69, 0x6e, 0x41,
	0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73,
	0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x70, 0x75, 0x5f, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x43, 0x70, 0x75,
	0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x5f, 0x66, 0x6c, 0x6f,
	0x61, 0x74, 0x5f, 0x6f, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x69,
	0x6e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x4f, 0x70, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x69, 0x6e,
	0x5f, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x74, 0x65, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12,
	0x30, 0x0a, 0x14, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x72, 0x65, 0x67, 0x65, 0x78, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x67, 0x65, 0x78, 0x65,
	0x73, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x72, 0x65, 0x67, 0x65, 0x78, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x67, 0x65, 0x78, 0x65, 0x73, 0x12,
	0x2a, 0x0a, 0x11, 0x74, 0x72, 0x69, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x67,
	0x65, 0x78, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x69, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x67, 0x65, 0x78, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x65, 0x78, 0x65, 0x73,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x68, 0x6f, 0x77, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x67, 0x65, 0x78, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x68, 0x69, 0x64, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x65, 0x78, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0f, 0x68, 0x69, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x67, 0x65,
	0x78, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x19, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x5f, 0x6f, 0x70, 0x5f, 0x6f, 0x6e, 0x6c, 0x79,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x4f, 0x70, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x20,
	0x0a, 0x0c, 0x64, 0x75, 0x6d, 0x70, 0x5f, 0x74, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x75, 0x6d, 0x70, 0x54, 0x6f, 0x46, 0x69, 0x6c, 0x65,
	0x22, 0x85, 0x03, 0x0a, 0x13, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x50, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x74, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x74, 0x66, 0x70, 0x72, 0x6f, 0x66, 0x2e, 0x41,
	0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x1a, 0x71, 0x0a, 0x0d, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x4a, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x74, 0x66, 0x70, 0x72, 0x6f, 0x66,
	0x2e, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xa8, 0x01,
	0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x5b, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x41, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x74, 0x66,
	0x70, 0x72, 0x6f, 0x66, 0x2e, 0x41, 0x64, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3a, 0x0a, 0x0c,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x25, 0x5a, 0x23, 0x74, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tensorflow_core_profiler_tfprof_options_proto_rawDescOnce sync.Once
	file_tensorflow_core_profiler_tfprof_options_proto_rawDescData = file_tensorflow_core_profiler_tfprof_options_proto_rawDesc
)

func file_tensorflow_core_profiler_tfprof_options_proto_rawDescGZIP() []byte {
	file_tensorflow_core_profiler_tfprof_options_proto_rawDescOnce.Do(func() {
		file_tensorflow_core_profiler_tfprof_options_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_core_profiler_tfprof_options_proto_rawDescData)
	})
	return file_tensorflow_core_profiler_tfprof_options_proto_rawDescData
}

var file_tensorflow_core_profiler_tfprof_options_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_tensorflow_core_profiler_tfprof_options_proto_goTypes = []interface{}{
	(*OptionsProto)(nil),        // 0: tensorflow.tfprof.OptionsProto
	(*AdvisorOptionsProto)(nil), // 1: tensorflow.tfprof.AdvisorOptionsProto
	nil,                         // 2: tensorflow.tfprof.AdvisorOptionsProto.CheckersEntry
	(*AdvisorOptionsProto_CheckerOption)(nil), // 3: tensorflow.tfprof.AdvisorOptionsProto.CheckerOption
	nil, // 4: tensorflow.tfprof.AdvisorOptionsProto.CheckerOption.OptionsEntry
}
var file_tensorflow_core_profiler_tfprof_options_proto_depIdxs = []int32{
	2, // 0: tensorflow.tfprof.AdvisorOptionsProto.checkers:type_name -> tensorflow.tfprof.AdvisorOptionsProto.CheckersEntry
	3, // 1: tensorflow.tfprof.AdvisorOptionsProto.CheckersEntry.value:type_name -> tensorflow.tfprof.AdvisorOptionsProto.CheckerOption
	4, // 2: tensorflow.tfprof.AdvisorOptionsProto.CheckerOption.options:type_name -> tensorflow.tfprof.AdvisorOptionsProto.CheckerOption.OptionsEntry
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_tensorflow_core_profiler_tfprof_options_proto_init() }
func file_tensorflow_core_profiler_tfprof_options_proto_init() {
	if File_tensorflow_core_profiler_tfprof_options_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_core_profiler_tfprof_options_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptionsProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_profiler_tfprof_options_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvisorOptionsProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_profiler_tfprof_options_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvisorOptionsProto_CheckerOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_core_profiler_tfprof_options_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tensorflow_core_profiler_tfprof_options_proto_goTypes,
		DependencyIndexes: file_tensorflow_core_profiler_tfprof_options_proto_depIdxs,
		MessageInfos:      file_tensorflow_core_profiler_tfprof_options_proto_msgTypes,
	}.Build()
	File_tensorflow_core_profiler_tfprof_options_proto = out.File
	file_tensorflow_core_profiler_tfprof_options_proto_rawDesc = nil
	file_tensorflow_core_profiler_tfprof_options_proto_goTypes = nil
	file_tensorflow_core_profiler_tfprof_options_proto_depIdxs = nil
}
