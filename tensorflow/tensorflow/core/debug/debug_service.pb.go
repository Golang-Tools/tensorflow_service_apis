// Copyright 2016 The TensorFlow Authors. All Rights Reserved.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//==============================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0-devel
// 	protoc        v3.11.4
// source: tensorflow/core/debug/debug_service.proto

package debug

import (
	framework "Golang-Tools/tensorflow_service_apis/tensorflow/tensorflow/core/framework"
	profiler "Golang-Tools/tensorflow_service_apis/tensorflow/tensorflow/core/profiler"
	protobuf "Golang-Tools/tensorflow_service_apis/tensorflow/tensorflow/core/protobuf"
	util "Golang-Tools/tensorflow_service_apis/tensorflow/tensorflow/core/util"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EventReply_DebugOpStateChange_State int32

const (
	EventReply_DebugOpStateChange_STATE_UNSPECIFIED EventReply_DebugOpStateChange_State = 0
	EventReply_DebugOpStateChange_DISABLED          EventReply_DebugOpStateChange_State = 1
	EventReply_DebugOpStateChange_READ_ONLY         EventReply_DebugOpStateChange_State = 2
	EventReply_DebugOpStateChange_READ_WRITE        EventReply_DebugOpStateChange_State = 3
)

// Enum value maps for EventReply_DebugOpStateChange_State.
var (
	EventReply_DebugOpStateChange_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "DISABLED",
		2: "READ_ONLY",
		3: "READ_WRITE",
	}
	EventReply_DebugOpStateChange_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"DISABLED":          1,
		"READ_ONLY":         2,
		"READ_WRITE":        3,
	}
)

func (x EventReply_DebugOpStateChange_State) Enum() *EventReply_DebugOpStateChange_State {
	p := new(EventReply_DebugOpStateChange_State)
	*p = x
	return p
}

func (x EventReply_DebugOpStateChange_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventReply_DebugOpStateChange_State) Descriptor() protoreflect.EnumDescriptor {
	return file_tensorflow_core_debug_debug_service_proto_enumTypes[0].Descriptor()
}

func (EventReply_DebugOpStateChange_State) Type() protoreflect.EnumType {
	return &file_tensorflow_core_debug_debug_service_proto_enumTypes[0]
}

func (x EventReply_DebugOpStateChange_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventReply_DebugOpStateChange_State.Descriptor instead.
func (EventReply_DebugOpStateChange_State) EnumDescriptor() ([]byte, []int) {
	return file_tensorflow_core_debug_debug_service_proto_rawDescGZIP(), []int{0, 0, 0}
}

type CallTraceback_CallType int32

const (
	CallTraceback_UNSPECIFIED     CallTraceback_CallType = 0
	CallTraceback_GRAPH_EXECUTION CallTraceback_CallType = 1
	CallTraceback_EAGER_EXECUTION CallTraceback_CallType = 2
)

// Enum value maps for CallTraceback_CallType.
var (
	CallTraceback_CallType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "GRAPH_EXECUTION",
		2: "EAGER_EXECUTION",
	}
	CallTraceback_CallType_value = map[string]int32{
		"UNSPECIFIED":     0,
		"GRAPH_EXECUTION": 1,
		"EAGER_EXECUTION": 2,
	}
)

func (x CallTraceback_CallType) Enum() *CallTraceback_CallType {
	p := new(CallTraceback_CallType)
	*p = x
	return p
}

func (x CallTraceback_CallType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CallTraceback_CallType) Descriptor() protoreflect.EnumDescriptor {
	return file_tensorflow_core_debug_debug_service_proto_enumTypes[1].Descriptor()
}

func (CallTraceback_CallType) Type() protoreflect.EnumType {
	return &file_tensorflow_core_debug_debug_service_proto_enumTypes[1]
}

func (x CallTraceback_CallType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CallTraceback_CallType.Descriptor instead.
func (CallTraceback_CallType) EnumDescriptor() ([]byte, []int) {
	return file_tensorflow_core_debug_debug_service_proto_rawDescGZIP(), []int{1, 0}
}

// Reply message from EventListener to the client, i.e., to the source of the
// Event protocol buffers, e.g., debug ops inserted by a debugged runtime to a
// TensorFlow graph being executed.
type EventReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DebugOpStateChanges []*EventReply_DebugOpStateChange `protobuf:"bytes,1,rep,name=debug_op_state_changes,json=debugOpStateChanges,proto3" json:"debug_op_state_changes,omitempty"`
	// New tensor value to override the current tensor value with.
	Tensor *framework.TensorProto `protobuf:"bytes,2,opt,name=tensor,proto3" json:"tensor,omitempty"`
}

func (x *EventReply) Reset() {
	*x = EventReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_debug_debug_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventReply) ProtoMessage() {}

func (x *EventReply) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_debug_debug_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventReply.ProtoReflect.Descriptor instead.
func (*EventReply) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_debug_debug_service_proto_rawDescGZIP(), []int{0}
}

func (x *EventReply) GetDebugOpStateChanges() []*EventReply_DebugOpStateChange {
	if x != nil {
		return x.DebugOpStateChanges
	}
	return nil
}

func (x *EventReply) GetTensor() *framework.TensorProto {
	if x != nil {
		return x.Tensor
	}
	return nil
}

// Data on the traceback of a debugged call, e.g., a Session.run() call, or the
// execution of an eager operation.
type CallTraceback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallType CallTraceback_CallType `protobuf:"varint,1,opt,name=call_type,json=callType,proto3,enum=tensorflow.CallTraceback_CallType" json:"call_type,omitempty"`
	// A key for the call. For example, for graph execution, this is a key
	// consisting of the names of the fed and fetched tensors.
	CallKey string `protobuf:"bytes,2,opt,name=call_key,json=callKey,proto3" json:"call_key,omitempty"`
	// Traceback stack for the origin of the call event.
	// For graph execution, this is the stack of the Session.run() call.
	// For eager execution, this is the stack of the Python line that invokes
	// the execution of the eager op.
	OriginStack *profiler.CodeDef `protobuf:"bytes,3,opt,name=origin_stack,json=originStack,proto3" json:"origin_stack,omitempty"`
	// Keeps track of the mapping from integer IDs in `origin_stack` to actual
	// string values (e.g., file paths, function names).
	OriginIdToString map[int64]string `protobuf:"bytes,4,rep,name=origin_id_to_string,json=originIdToString,proto3" json:"origin_id_to_string,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Traceback for the graph (if any) involved in the call.
	GraphTraceback *profiler.OpLogProto `protobuf:"bytes,5,opt,name=graph_traceback,json=graphTraceback,proto3" json:"graph_traceback,omitempty"`
	// Version of the graph in `graph_traceback` (if any).
	GraphVersion int64 `protobuf:"varint,6,opt,name=graph_version,json=graphVersion,proto3" json:"graph_version,omitempty"`
}

func (x *CallTraceback) Reset() {
	*x = CallTraceback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_debug_debug_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallTraceback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallTraceback) ProtoMessage() {}

func (x *CallTraceback) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_debug_debug_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallTraceback.ProtoReflect.Descriptor instead.
func (*CallTraceback) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_debug_debug_service_proto_rawDescGZIP(), []int{1}
}

func (x *CallTraceback) GetCallType() CallTraceback_CallType {
	if x != nil {
		return x.CallType
	}
	return CallTraceback_UNSPECIFIED
}

func (x *CallTraceback) GetCallKey() string {
	if x != nil {
		return x.CallKey
	}
	return ""
}

func (x *CallTraceback) GetOriginStack() *profiler.CodeDef {
	if x != nil {
		return x.OriginStack
	}
	return nil
}

func (x *CallTraceback) GetOriginIdToString() map[int64]string {
	if x != nil {
		return x.OriginIdToString
	}
	return nil
}

func (x *CallTraceback) GetGraphTraceback() *profiler.OpLogProto {
	if x != nil {
		return x.GraphTraceback
	}
	return nil
}

func (x *CallTraceback) GetGraphVersion() int64 {
	if x != nil {
		return x.GraphVersion
	}
	return 0
}

type EventReply_DebugOpStateChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State      EventReply_DebugOpStateChange_State `protobuf:"varint,1,opt,name=state,proto3,enum=tensorflow.EventReply_DebugOpStateChange_State" json:"state,omitempty"`
	NodeName   string                              `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	OutputSlot int32                               `protobuf:"varint,3,opt,name=output_slot,json=outputSlot,proto3" json:"output_slot,omitempty"`
	DebugOp    string                              `protobuf:"bytes,4,opt,name=debug_op,json=debugOp,proto3" json:"debug_op,omitempty"`
}

func (x *EventReply_DebugOpStateChange) Reset() {
	*x = EventReply_DebugOpStateChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_debug_debug_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventReply_DebugOpStateChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventReply_DebugOpStateChange) ProtoMessage() {}

func (x *EventReply_DebugOpStateChange) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_debug_debug_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventReply_DebugOpStateChange.ProtoReflect.Descriptor instead.
func (*EventReply_DebugOpStateChange) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_debug_debug_service_proto_rawDescGZIP(), []int{0, 0}
}

func (x *EventReply_DebugOpStateChange) GetState() EventReply_DebugOpStateChange_State {
	if x != nil {
		return x.State
	}
	return EventReply_DebugOpStateChange_STATE_UNSPECIFIED
}

func (x *EventReply_DebugOpStateChange) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *EventReply_DebugOpStateChange) GetOutputSlot() int32 {
	if x != nil {
		return x.OutputSlot
	}
	return 0
}

func (x *EventReply_DebugOpStateChange) GetDebugOp() string {
	if x != nil {
		return x.DebugOp
	}
	return ""
}

var File_tensorflow_core_debug_debug_service_proto protoreflect.FileDescriptor

var file_tensorflow_core_debug_debug_service_proto_rawDesc = []byte{
	0x0a, 0x29, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x74, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x1a, 0x26, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x29, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x74, 0x66, 0x70, 0x72, 0x6f, 0x66,
	0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x74, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x20, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x75, 0x74, 0x69, 0x6c, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xa1, 0x03, 0x0a, 0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x5e, 0x0a, 0x16, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x6f, 0x70, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4f,
	0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x13, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x4f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x12, 0x2f, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x54,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x1a, 0x81, 0x02, 0x0a, 0x12, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4f, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x64, 0x65, 0x62, 0x75, 0x67, 0x4f, 0x70, 0x22, 0x4b, 0x0a, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53,
	0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x45, 0x41, 0x44, 0x5f,
	0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x57,
	0x52, 0x49, 0x54, 0x45, 0x10, 0x03, 0x22, 0x83, 0x04, 0x0a, 0x0d, 0x43, 0x61, 0x6c, 0x6c, 0x54,
	0x72, 0x61, 0x63, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x3f, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x74, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x72, 0x61,
	0x63, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x6c,
	0x6c, 0x4b, 0x65, 0x79, 0x12, 0x3d, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x65, 0x6e,
	0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x74, 0x66, 0x70, 0x72, 0x6f, 0x66, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x44, 0x65, 0x66, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x53, 0x74,
	0x61, 0x63, 0x6b, 0x12, 0x5e, 0x0a, 0x13, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64,
	0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x61,
	0x6c, 0x6c, 0x54, 0x72, 0x61, 0x63, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x49, 0x64, 0x54, 0x6f, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x54, 0x6f, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x12, 0x46, 0x0a, 0x0f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x74, 0x66, 0x70, 0x72, 0x6f, 0x66,
	0x2e, 0x4f, 0x70, 0x4c, 0x6f, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0e, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x54, 0x72, 0x61, 0x63, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x67, 0x72, 0x61, 0x70, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x1a, 0x43, 0x0a, 0x15, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x54, 0x6f, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x45, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x52, 0x41, 0x50, 0x48, 0x5f, 0x45, 0x58, 0x45, 0x43,
	0x55, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x41, 0x47, 0x45, 0x52,
	0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x32, 0xdd, 0x01, 0x0a,
	0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x12, 0x3b,
	0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x11, 0x2e, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a,
	0x16, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x28, 0x01, 0x30, 0x01, 0x12, 0x43, 0x0a, 0x0e, 0x53,
	0x65, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x63, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x19, 0x2e,
	0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x54,
	0x72, 0x61, 0x63, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x1a, 0x16, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x4a, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x67, 0x65, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x1a, 0x16, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x22, 0x5a, 0x20,
	0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tensorflow_core_debug_debug_service_proto_rawDescOnce sync.Once
	file_tensorflow_core_debug_debug_service_proto_rawDescData = file_tensorflow_core_debug_debug_service_proto_rawDesc
)

func file_tensorflow_core_debug_debug_service_proto_rawDescGZIP() []byte {
	file_tensorflow_core_debug_debug_service_proto_rawDescOnce.Do(func() {
		file_tensorflow_core_debug_debug_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_core_debug_debug_service_proto_rawDescData)
	})
	return file_tensorflow_core_debug_debug_service_proto_rawDescData
}

var file_tensorflow_core_debug_debug_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_tensorflow_core_debug_debug_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_tensorflow_core_debug_debug_service_proto_goTypes = []interface{}{
	(EventReply_DebugOpStateChange_State)(0), // 0: tensorflow.EventReply.DebugOpStateChange.State
	(CallTraceback_CallType)(0),              // 1: tensorflow.CallTraceback.CallType
	(*EventReply)(nil),                       // 2: tensorflow.EventReply
	(*CallTraceback)(nil),                    // 3: tensorflow.CallTraceback
	(*EventReply_DebugOpStateChange)(nil),    // 4: tensorflow.EventReply.DebugOpStateChange
	nil,                                      // 5: tensorflow.CallTraceback.OriginIdToStringEntry
	(*framework.TensorProto)(nil),            // 6: tensorflow.TensorProto
	(*profiler.CodeDef)(nil),                 // 7: tensorflow.tfprof.CodeDef
	(*profiler.OpLogProto)(nil),              // 8: tensorflow.tfprof.OpLogProto
	(*util.Event)(nil),                       // 9: tensorflow.Event
	(*protobuf.DebuggedSourceFiles)(nil),     // 10: tensorflow.DebuggedSourceFiles
}
var file_tensorflow_core_debug_debug_service_proto_depIdxs = []int32{
	4,  // 0: tensorflow.EventReply.debug_op_state_changes:type_name -> tensorflow.EventReply.DebugOpStateChange
	6,  // 1: tensorflow.EventReply.tensor:type_name -> tensorflow.TensorProto
	1,  // 2: tensorflow.CallTraceback.call_type:type_name -> tensorflow.CallTraceback.CallType
	7,  // 3: tensorflow.CallTraceback.origin_stack:type_name -> tensorflow.tfprof.CodeDef
	5,  // 4: tensorflow.CallTraceback.origin_id_to_string:type_name -> tensorflow.CallTraceback.OriginIdToStringEntry
	8,  // 5: tensorflow.CallTraceback.graph_traceback:type_name -> tensorflow.tfprof.OpLogProto
	0,  // 6: tensorflow.EventReply.DebugOpStateChange.state:type_name -> tensorflow.EventReply.DebugOpStateChange.State
	9,  // 7: tensorflow.EventListener.SendEvents:input_type -> tensorflow.Event
	3,  // 8: tensorflow.EventListener.SendTracebacks:input_type -> tensorflow.CallTraceback
	10, // 9: tensorflow.EventListener.SendSourceFiles:input_type -> tensorflow.DebuggedSourceFiles
	2,  // 10: tensorflow.EventListener.SendEvents:output_type -> tensorflow.EventReply
	2,  // 11: tensorflow.EventListener.SendTracebacks:output_type -> tensorflow.EventReply
	2,  // 12: tensorflow.EventListener.SendSourceFiles:output_type -> tensorflow.EventReply
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_tensorflow_core_debug_debug_service_proto_init() }
func file_tensorflow_core_debug_debug_service_proto_init() {
	if File_tensorflow_core_debug_debug_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_core_debug_debug_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_debug_debug_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallTraceback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_debug_debug_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventReply_DebugOpStateChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_core_debug_debug_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tensorflow_core_debug_debug_service_proto_goTypes,
		DependencyIndexes: file_tensorflow_core_debug_debug_service_proto_depIdxs,
		EnumInfos:         file_tensorflow_core_debug_debug_service_proto_enumTypes,
		MessageInfos:      file_tensorflow_core_debug_debug_service_proto_msgTypes,
	}.Build()
	File_tensorflow_core_debug_debug_service_proto = out.File
	file_tensorflow_core_debug_debug_service_proto_rawDesc = nil
	file_tensorflow_core_debug_debug_service_proto_goTypes = nil
	file_tensorflow_core_debug_debug_service_proto_depIdxs = nil
}
